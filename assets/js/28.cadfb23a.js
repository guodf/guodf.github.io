(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{365:function(t,e,n){"use strict";n.r(e);var a=n(1),r=Object(a.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"桶排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#桶排序","aria-hidden":"true"}},[t._v("#")]),t._v(" 桶排序")]),t._v(" "),n("h3",{attrs:{id:"原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),n("pre",[n("code",[t._v("求出无序集合的最大值与最小值（这里的最小值指存在负数的情况），\n如果存在负数我们就将无序集合以0分为两部分分别处理，\n其中负数的处理办法按正数的处理办法来（先将负数求绝对值，等排完序后在加上负数符号）。\n\n正数桶排序实现：求出无序集合的最大值，\n比如10，然后就创建一个可以容纳11个元素的数组（因为数组下标是从0开始的），\n将1放在数组下标为1的位置，将2放在下标位置为2的位置，依次这样操作，\n最后按数组顺序输出就是我们想要的排序结果。\n")])])])},[],!1,null,null,null);e.default=r.exports}}]);