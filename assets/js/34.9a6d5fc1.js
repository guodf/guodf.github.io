(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{435:function(a,t,i){"use strict";i.r(t);var r=i(1),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,i=a._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[i("h2",{attrs:{id:"flutter简介"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flutter简介"}},[a._v("#")]),a._v(" Flutter简介")]),a._v(" "),i("h3",{attrs:{id:"废话篇"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#废话篇"}},[a._v("#")]),a._v(" 废话篇")]),a._v(" "),i("p",[a._v("​\tFlutter是google开源的新跨平台UI框架，目标将支持pc，mobile，web前端的UI开发。")]),a._v(" "),i("p",[a._v("​\tpc和mobile端底层的UI引擎是skia，web前端依然是H5+js（不知道什么时候才有机会支持webassembly）。")]),a._v(" "),i("h4",{attrs:{id:"跨平台进化史"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#跨平台进化史"}},[a._v("#")]),a._v(" 跨平台进化史")]),a._v(" "),i("h5",{attrs:{id:"第一代：原生开发"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第一代：原生开发"}},[a._v("#")]),a._v(" 第一代：原生开发")]),a._v(" "),i("ol",[i("li",[a._v("以java为代表的android开发")]),a._v(" "),i("li",[a._v("以oc代表的ios开发")]),a._v(" "),i("li",[a._v("以C#为代表的wp开发（已死）")])]),a._v(" "),i("h5",{attrs:{id:"第二代：h5-各平台原生api扩展插件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第二代：h5-各平台原生api扩展插件"}},[a._v("#")]),a._v(" 第二代：H5+各平台原生API扩展插件")]),a._v(" "),i("p",[a._v("​\t以phonegap为代表，包涵：cordova，inoic等，ui完全使用h5运行再webview上")]),a._v(" "),i("h5",{attrs:{id:"第三代：组件化ui-各平台原生api扩展插件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第三代：组件化ui-各平台原生api扩展插件"}},[a._v("#")]),a._v(" 第三代：组件化ui+各平台原生API扩展插件")]),a._v(" "),i("p",[a._v("​\treact native  将组件转换为原生UI，调用原生api需要单独引用个平台扩展类库")]),a._v(" "),i("h5",{attrs:{id:"第三点五代：组件化-原生api调用"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第三点五代：组件化-原生api调用"}},[a._v("#")]),a._v(" 第三点五代：组件化+原生API调用")]),a._v(" "),i("ol",[i("li",[i("p",[a._v("nativescript  将组件转换为原生UI，通过反射调用原生api，仅一种js语言搞定（笔者最喜欢这个，可惜不流行）")])]),a._v(" "),i("li",[i("p",[a._v("xamarin 将组件转换成原生UI，基于view扩展，通过mono实现自己的虚拟机，将原生api转换成C#类库，原生调用，几乎无性能你损失（甚至超越原生性能），唯一的缺点ui是使用xaml绘制，上手难（无wpf经验），UI偏向企业，xamarin支持多种平台：windows，mac，linux，androi，ios，wp，这完全得益于mono的支持")])])]),a._v(" "),i("h5",{attrs:{id:"第四代：各平台ui-原生api调用"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第四代：各平台ui-原生api调用"}},[a._v("#")]),a._v(" 第四代：各平台UI+原生API调用")]),a._v(" "),i("p",[a._v("​\t将kotlin转换成对应平台的语言，唯一缺点UI需要对应平台编写，优点：语法精简，原生性能，屌屌屌！")]),a._v(" "),i("h5",{attrs:{id:"第四代：原生ui-各平台原生api扩展"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第四代：原生ui-各平台原生api扩展"}},[a._v("#")]),a._v(" 第四代：原生UI+各平台原生API扩展")]),a._v(" "),i("p",[a._v("​\tflutter技术，google亲儿子，唯一不爽的是dart语言，ui使用skia重新实现，抛弃历史包袱，2Dui可以达到60帧，好得益于skia，3D有点弱，调用原生需要编写原生的扩展，仅UI部分通用，调用原生UI方便，几乎无侵入性，优点：UI编写快！快！快！缺点：UI维护难！难！难！")]),a._v(" "),i("p",[a._v("​\tflutter技术从面世就得到大家的一致追捧，潜力无穷，希望越来越好。")]),a._v(" "),i("h5",{attrs:{id:"第五代：原生ui-原生api调用（臆想）"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第五代：原生ui-原生api调用（臆想）"}},[a._v("#")]),a._v(" 第五代：原生UI+原生API调用（臆想）")]),a._v(" "),i("p",[a._v("​\tflutter+xamarin：flutter开发UI，有mono提供原生api的访问（已经发现支持的早期版本）。")]),a._v(" "),i("p",[a._v("​\tflutter+kotlin：flutter开发UI，kotlin提供原生api的访问。")]),a._v(" "),i("h5",{attrs:{id:"第六代：未来"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第六代：未来"}},[a._v("#")]),a._v(" 第六代：未来")]),a._v(" "),i("p",[a._v("​\t5G时代，终端仅用于图片的绘制，所有交互全部由服务端提供。")])])}),[],!1,null,null,null);t.default=s.exports}}]);